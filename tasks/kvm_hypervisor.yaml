---
- name: Add KVM hypervisor host to inventory
  ansible.builtin.add_host:
    hostname: "{{ inventory_hostname }}"
    groups:
      - __cloudstack_kvm_hypervisor

- name: Set SELinux to permissive
  ansible.posix.selinux:
    state: permissive
    policy: targeted
  when: ansible_facts['os_family'] == "RedHat"

- name: Disable apparmor profiles
  when: ansible_facts['distribution'] == "Ubuntu"
  ansible.builtin.command:
    cmd: "/usr/sbin/apparmor_parser -R /etc/apparmor.d/{{ item }}"
    creates: "/etc/apparmor.d/disable/{{ item }}"
  loop:
    - usr.sbin.libvirtd
    - usr.lib.libvirt.virt-aa-helper

- name: Persist disablement of apparmor profile
  when: ansible_facts['distribution'] == "Ubuntu"
  ansible.builtin.file:
    src: "/etc/apparmor.d/{{ item }}"
    dest: "/etc/apparmor.d/disable/{{ item }}"
    state: link
  loop:
    - usr.sbin.libvirtd
    - usr.lib.libvirt.virt-aa-helper

- name: Add cloudstack group
  ansible.builtin.group:
    name: cloudstack
    system: true

- name: Add cloudstack management user
  ansible.builtin.user:
    name: cloudstack
    group: cloudstack
    system: true
    password: "{{ cloudstack_user_password | password_hash }}"
    create_home: true

- name: Grant cloudstack user root access
  ansible.builtin.copy:
    src: sudoers
    dest: /etc/sudoers.d/cloudstack
    owner: root
    group: root
    mode: "0400"

- name: Copy in libvirtd daemon parameters file
  ansible.builtin.copy:
    src: sysconfig_libvirtd
    dest: "{{ __cloudstack_libvirtd_parameters }}"
    owner: root
    group: root
    mode: "0644"
  notify: Restart libvirtd

- name: Mask unused libvirt services
  ansible.builtin.systemd:
    name: "{{ item }}"
    masked: true
  with_items:
    - libvirtd.socket
    - libvirtd-ro.socket
    - libvirtd-admin.socket
    - libvirtd-tls.socket
    - libvirtd-tcp.socket
  notify: Restart libvirtd

- name: Configure libvirtd
  ansible.builtin.lineinfile:
    path: /etc/libvirt/libvirtd.conf
    regexp: "^#?\\s+{{ item | split | first }}"
    line: "{{ item }}"
  with_items:
    - listen_tls = 0
    - listen_tcp = 0
    - tls_port = "16514"
    - tcp_port = "16509"
    - auth_tcp = "none"
    - mdns_adv = 0
  notify: Restart libvirtd

- name: Configure qemu
  ansible.builtin.lineinfile:
    path: /etc/libvirt/qemu.conf
    regexp: "^#?\\s+vnc_listen"
    line: "vnc_listen = \"0.0.0.0\""
  notify: Restart libvirtd

- name: Configure agent guest cpu mode
  ansible.builtin.lineinfile:
    path: /etc/cloudstack/agent/agent.properties
    regexp: "^#?\\s+guest.cpu.mode"
    line: "guest.cpu.mode=host-passthrough"
  notify: Restart Cloudstack Agent

- name: Install cloudstack authorized_keys
  ansible.posix.authorized_key:
    user: cloudstack
    exclusive: true
    key: "{{ lookup('ansible.builtin.file', 'credentials/cloudstack_id_rsa.pub') }}"
  when: cloudstack_runtime_configuration

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
